 

##### *May 1, 2020*

### Getting Started with the DE10-Nano

I got my DE10-Nano board!!!! I'm so excited!! 

<img src="img/de10-nano-package.jpg" alt="DE10-Nano Package" width="400"/>

When I opened the box, the first things I see are a few guides:

<img src="img/de10-nano-guides.jpg" alt="DE10-Nano Guides" width="400"/>

And finally... the actual board!!! It's so pretty and it can fit on my hand! Very cool!

<img src="img/de10-nano-board-onhand.jpg" alt="DE10-Nano Board on my Hand" width="400"/>

Aaand to add to my collection of hobby electronics.. I have a little corner in the living room where I keep all my 
boxes of electronics since I'm working with them a lot recently. 

<img src="img/corner-of-electronics.jpg" alt="Stack of boxes of electronics" width="400"/>

ALRIGHT so now we dig in. The Nano board package comes with a handy-dandy Quick Start Guide detailing step by step instructions 
on how to get started with the board. By the end of following these instructions, we'll see an HTML web page generated by the Nano on our PC, 
called start.html. 

Something to note is that the MicroSD card comes already installed on the board in the MicroSD socket, and the card has a linux OS installed. 
So, to start off with you don't even need to worry about creating an image for the HPS! You just follow the quick start instructions and
go from there. 

<img src="img/de10-nano-quickstart-0.jpg" alt="DE10-Nano Quick Start guide page 1" width="400"/>
<img src="img/de10-nano-quickstart-1.jpg" alt="DE10-Nano Quick Start guide page 2" width="400"/>

#### Following the DE10-Nano Quick Start Guide

Before I start, the first thing I actually want to do is check which hardware revision I have. You can find out how to check your hardware
version [here](https://www.terasic.com.tw/cgi-bin/page/archive_download.pl?Language=English&No=1046&FID=5651e4e0b7a3671ffb4494a46a338bf3), 
from the [Terasic website page for DE10-Nano resources](https://www.terasic.com.tw/cgi-bin/page/archive.pl?Language=English&CategoryNo=205&No=1046&PartNo=4).

Looking at the back of my board, I see that my hardware revision is C. 

<img src="img/de10-nano-hw-revision-guide.png" alt="DE10-Nano Hardware revision" width="400"/>
<img src="img/de10-nano-hw-revision.jpg" alt="DE10-Nano Hardware revision" width="400"/>

Now that I know my hardware revision, I know which User Manual to follow from [Terasic's website](https://www.terasic.com.tw/cgi-bin/page/archive.pl?Language=English&CategoryNo=205&No=1046&PartNo=4). I don't think the hardware version would
make that much of a difference but I just wanted to be safe and use the correct user manual. The user manual I'll be using is [here](https://www.terasic.com.tw/cgi-bin/page/archive_download.pl?Language=English&No=1046&FID=f1f656bb5f040121c36f2f93f6b107ff).

Alright now I'll follow the instructions in the [Quick Start guide](https://www.terasic.com.tw/cgi-bin/page/archive_download.pl?Language=English&No=1046&FID=5fb5189ed0c367b8defcc815b8d2f38b). 

1) First it says to verify that the FPGA Configuration Mode Switches are set to 01010 to boot the DE10-Nano board from the MicroSD card. 
It looks like my board is all set:

<img src="img/de10-nano-config-mode-switches.jpg" alt="DE10-Nano Configuration Mode Switches" width="400"/>

2) Next, the instructions say to make sure the microSD card is properly installed on our board. The slot is on the back of the board. Mine looks good!

<img src="img/de10-nano-microsd-card.jpg" alt="DE10-Nano MicroSD Card" width="400"/>

3) And now we finally turn it on.. We need to connect the power adapter to the power jack on the board. After about 10 seconds the user LED
should begin to pulse indicating that the Linux OS has booted. 

Yay it's on!!!! Very exciting!!! 

<img src="img/de10-nano-on1.jpg" alt="DE10-Nano MicroSD Card" width="400"/>
<img src="img/de10-nano-on2.jpg" alt="DE10-Nano MicroSD Card" width="400"/>

4) Okay so now that we have the board turned on, we want to start interacting with it. The Quick Start guide instructs us to 
connect a USB cable to the Micro-B slot on the board and the other side to our PC. The Micro-B USB to Type-A USB cable is given to us. 

Once we connect it to our PC, the DE10-Nano board should appear as a USB mass storage device. 

<img src="img/de10-nano-connect-to-pc.jpg" alt="DE10-Nano connected to PC" width="400"/>

I use Ubuntu on my PC. The Nano shows up like this:

<img src="img/de10-nano-as-mass-storage.png" alt="DE10-Nano as a mass storage device on PC" width="500"/>

5) Now we open up the start.html file. 

And there it is!!! A nice welcome screen from the DE10-Nano board!!

<img src="img/de10-nano-start-html.png" alt="DE10-Nano start.html on PC" width="800"/>

Okay so here I'm running into some issues. On the Quick Start guide it gives instructions for Windows users to install an RNDIS driver which 
would enable ethernet over USB. It seems that this driver is automatically installed on Ubuntu. Running dmesg, I see the following:
```
	[ 9974.328267] usb 1-2.2: new high-speed USB device number 25 using xhci_hcd
	[ 9974.433589] usb 1-2.2: New USB device found, idVendor=1d6b, idProduct=0104
	[ 9974.433595] usb 1-2.2: New USB device strings: Mfr=3, Product=4, SerialNumber=0
	[ 9974.433598] usb 1-2.2: Product: Multifunction Composite Gadget
	[ 9974.433601] usb 1-2.2: Manufacturer: Linux 4.1.33-ltsi-altera with ffb40000.usb
	[ 9974.443835] rndis_host 1-2.2:1.0 usb0: register 'rndis_host' at usb-0000:00:14.0-2.2, RNDIS device, 12:06:a0:8d:18:db
	[ 9974.444660] cdc_acm 1-2.2:1.2: ttyACM0: USB ACM device
	[ 9974.445483] usb-storage 1-2.2:1.4: USB Mass Storage device detected
	[ 9974.445801] scsi host0: usb-storage 1-2.2:1.4
	[ 9974.788973] rndis_host 1-2.2:1.0 enp0s20f0u2u2: renamed from usb0
	[ 9974.822817] IPv6: ADDRCONF(NETDEV_UP): enp0s20f0u2u2: link is not ready
```

It seems that my PC detected the board as an RNDIS device. When I enter 192.168.7.1 on a web browser (which is supposed to serve the webpage
from the board), I get nothing. Running ifconfig gives me:
```
	enp0s20f0u2u2: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500
	        inet6 fe80::2ee1:b252:a22a:4bd2  prefixlen 64  scopeid 0x20<link>
	        ether da:21:d6:ae:d7:52  txqueuelen 1000  (Ethernet)
	        RX packets 0  bytes 0 (0.0 B)
	        RX errors 0  dropped 0  overruns 0  frame 0
	        TX packets 0  bytes 0 (0.0 B)
	        TX errors 58  dropped 0 overruns 0  carrier 0  collisions 0
```

I can't ping 192.168.7.1 either. However I can configure the ip settings for the device as such:

```
	sudo ifconfig enp0s20f0u2u2 192.168.7.1 netmask 255.255.255.0 up
```


And now I can ping 192.168.7.1:

```
	(AreebaAziz.github.io) areeba@areebaPC:~/code/AreebaAziz.github.io/blog$ ping 192.168.7.1
	PING 192.168.7.1 (192.168.7.1) 56(84) bytes of data.
	64 bytes from 192.168.7.1: icmp_seq=1 ttl=64 time=0.061 ms
	64 bytes from 192.168.7.1: icmp_seq=2 ttl=64 time=0.056 ms
	64 bytes from 192.168.7.1: icmp_seq=3 ttl=64 time=0.057 ms
	64 bytes from 192.168.7.1: icmp_seq=4 ttl=64 time=0.053 ms
	^C
	--- 192.168.7.1 ping statistics ---
	4 packets transmitted, 4 received, 0% packet loss, time 3048ms
	rtt min/avg/max/mdev = 0.053/0.056/0.061/0.009 ms
```

However the webpage still doesn't load...

I'm guessing now it's time to go into the board and see what's going on. I'll try connecting to it serially. 

To connect via serial there's a UART to USB port (USB Mini-B) on the Nano board, and the Mini-B USB cable is given to us. 
We connect the cable to the UART-USB port on the board and the other end to our PC. 

Before I connected it, I checked my current tty devices connected to my PC: ``ls /dev/tty`` and then press tab to see the connected
devices. 

Then I connected the UART-USB cable from the Nano to my PC. When I run the ``ls /dev/tty`` + tab again, there's a new device
listed, which for me was ``ttyUSB0``.

I ran the following to install a package you can use to communicate serially to devices:
```
	sudo apt install cu 
```
Then, run:
```
	sudo cu -l /dev/ttyUSB0 -s 115200
```
When I first ran that, it gave me an error saying permission denied/or device in use, To resolve the permission denied part, 
I ran this:
```
	sudo chown root:root /dev/ttyUSB0
```
When I ran the ``cu`` command above again, the connected worked (it says "Connected"). 

However I didn't see any data come in and I couldn't send any data either. So I unplugged the cable, turned off the Nano board,
re-plugged the cable, started reading from the serial connection again, and then turned on the Nano. 

This time I got stuff! I got a bunch of logs related to the Nano being boot up. Cool stuff! 

In a few seconds I got the Angstrom login message:
```
	.---O---.                                           
	|       |                  .-.           o o        
	|   |   |-----.-----.-----.| |   .----..-----.-----.
	|       |     | __  |  ---'| '--.|  .-'|     |     |
	|   |   |  |  |     |---  ||  --'|  |  |  '  | | | |
	'---'---'--'--'--.  |-----''----''--'  '-----'-'-'-'
	                -'  |
	                '---'

	The Angstrom Distribution de10-nano ttyS0

	Angstrom v2016.12 - Kernel 4.1.33-ltsi-altera

	de10-nano login: 
```

I've read that there's no default password and we should be able to hit enter and log in. However I can't seem to send any data
from my PC through the serial connection. Also, I'm getting these log messages from the Nano:
```
	de10-nano login: [   17.398305] IPv6: ADDRCONF(NETDEV_UP): eth0: link is not ready
	[   18.719904] IPv6: ADDRCONF(NETDEV_UP): usb0: link is not ready
	[   19.237056] cfg80211: Calling CRDA to update world regulatory domain
	[   22.396558] cfg80211: Calling CRDA to update world regulatory domain
	[   25.556639] cfg80211: Calling CRDA to update world regulatory domain
	[   28.716481] cfg80211: Calling CRDA to update world regulatory domain
	[   31.876490] cfg80211: Calling CRDA to update world regulatory domain
	[   35.036484] cfg80211: Exceeded CRDA call max attempts. Not calling CRDA
```

This might be a problem!

Okay so after trying different things, I finally got to login to the Nano board!

Here's what I did:

- Instead of using the ``cu`` command I tried above, I used Python's pyserial module. I used this module for connecting to devices
serially during my internship at Arcturus; that's where I got the idea. 
- To install the pyserial module, run:
```
	sudo python3 -m pip install pyserial
```
- Then, keep the Nano board powered off, but connect the serial cable to the Nano. Then:
```
	areeba@areebaPC:~/code/AreebaAziz.github.io/blog$ sudo python3 -m serial.tools.miniterm - 115200

	--- Available ports:
	---  1: /dev/ttyUSB0         'FT232R USB UART'
	--- Enter port index or full name: 1
	--- Miniterm on /dev/ttyUSB0  115200,8,N,1 ---
	--- Quit: Ctrl+] | Menu: Ctrl+T | Help: Ctrl+T followed by Ctrl+H ---
	␀c
	.---O---.                                           
	|       |                  .-.           o o        
	|   |   |-----.-----.-----.| |   .----..-----.-----.
	|       |     | __  |  ---'| '--.|  .-'|     |     |
	|   |   |  |  |     |---  ||  --'|  |  |  '  | | | |
	'---'---'--'--'--.  |-----''----''--'  '-----'-'-'-'
	                -'  |
	                '---'

	The Angstrom Distribution de10-nano ttyS0

	Angstrom v2016.12 - Kernel 4.1.33-ltsi-altera

	de10-nano login: 
```

Great! The serial connection works without the weird CRDA error when using ``cu``. I can also send data from my PC now. 
The default login for the Nano is: root, and there's no password so just hit enter. 

And then.... I'm finally in!!
```
	root@de10-nano:~# ls -l
	total 4
	drwxr-xr-x    2 root     root          4096 Mar 31 02:21 Desktop
	root@de10-nano:~# 
	root@de10-nano:~# 
```

I'm just exploring the file system of the Nano. Here's a useful directory that may come in handy later if trying to work with
GPIO from the HPS side:

```
	root@de10-nano:/examples/gpio/sandbox# cat README_first.txt 
	This directory contains three different example directories that contain
	documentation and examples for interacting with the GPIO resources on the Altas
	board.

	raw-gpio - contains a README file that describes how to discover and interact
	           with the gpio framework provided by the linux environment on the
	           DE10-Nano target.  There is a script and two C programs that
	           demonstrate how to programmatically detect the state of the KEY0 push
	           button on the DE10-Nano board.  The script and one C program simply
	           read the state, output it and exit, the second C program enables the
	           interrupt functionality for the GPIO and waits for the push button
	           press to generate the interrupt that it waits for.

	gpio-keys - contains a README file that describes how to discover and interact
	            with the gpio-keys framework provided by the linux environment on
	            the DE10-Nano target.  There is a script and two C programs that
	            demonstrate how to programmatically detect the input events
	            generated by the SW0, SW1, SW2 and SW3 switches on the DE10-Nano
	            board.  The script and one C program simply report the input events
	            as they are detected, the second C program adds a call to the
	            ioctl() function to read the current state of all four switches as
	            each input event is processed.

	gpio-leds - contains a README file that describes how to discover and interact
	            with the gpio-leds framework provided by the linux environment on
	            the DE10-Nano target.  There is a script and a C program that
	            demonstrate how to programmatically control the LEDS on the
	            DE10-Nano board.

	Please see the README files in each sub directory for more information.
```

Okay cool! I found this [getting started guide](https://www.glennklockwood.com/sysadmin-howtos/terasic-de10-nano.html) that also provides steps to do basic security stuff with the Nano. I am choosing
to skip this part because I'm not worried about security on my device since it'll always be in a private LAN...and well no one
else in my family knows what this board even is. 

I know that what I've done so far doesn't seem like much (I mean all I really did was turn on the board and log in via serial console), but I'm proud of myself!! At first everything just seemed very confusing and I didn't know where to start, but now I've
logged into the HPS of the board and I have an idea of what I'll be doing next!

Looking ahead, I might follow the ["My First HPS" guide](https://www.terasic.com.tw/cgi-bin/page/archive_download.pl?Language=English&No=1046&FID=e54a5ce44c073f8c7b312fc783a379d4) to get more experience with the HPS. 
Or I might dive right into the FPGA portion!!! I'm super excited about that. 

Some mini-projects I'm thinking of doing are:

- from the FPGA, create an up-counter and show the counter in the user LEDs on the board. Then use the push buttons to reset
the counter, and maybe the switches to set the direction of counting. 
- use some GPIO pins to connect wires to an external 7-segment display I have. The Nano does NOT have an on-board 7-segment display, 
but I have a few separately, so I want to try connecting wires to them and the GPIO pins and then program the FPGA to act as
a driver for this displays. 
- follow the "My First HPS" guide to practice stuff with the HPS. Maybe try doing the LED/push button/switches exericse above but 
from the HPS side. 


Again, major projects are:

- port labs 3, 4, 5 from my digital circuits class to the Nano board. 

That's all for today. :D 

